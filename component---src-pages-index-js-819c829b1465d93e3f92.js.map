{"version":3,"sources":["webpack:///./src/pages/photos.js","webpack:///./src/pages/index.js"],"names":["PhotosList","data","location","siteTitle","site","siteMetadata","title","photosManifest","allMdx","nodes","map","photoCollection","key","xs","to","fields","slug","fluid","frontmatter","thumbnail","childImageSharp","category","pageQuery","BlogIndex"],"mappings":"+FAAA,uKA+CeA,UAjCI,SAAC,GAAwB,IAAD,EAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACpBC,GAAY,UAAAF,EAAKG,KAAKC,oBAAV,eAAwBC,QAAxB,QACZC,EAAiBN,EAAKO,OAAOC,MACnC,OACE,kBAAC,IAAD,CAAQP,SAAUA,EAAUI,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,WAET,kBAAC,IAAD,eACA,kBAAC,IAAD,KACGC,EAAeG,KAAI,SAACC,EAAiBC,GACpC,OACE,kBAAC,IAAD,CAAKC,GAAI,EAAGD,IAAKA,GACf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAsBE,GAAE,UAAYH,EAAgBI,OAAOC,MAEzD,kBAAC,IAAD,CAAOC,MAAON,EAAgBO,YAAYC,UAAUC,gBAAgBH,QACpE,kBAAC,IAAD,MACCN,EAAgBO,YAAYZ,MAC7B,kBAAC,IAAD,KAA0BK,EAAgBO,YAAYG,mBAiBnE,IAAMC,EAAS,c,kCCjDtB,8JA6CeC,UApCG,SAAC,GAAwB,IAAD,EAArBtB,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACnBC,GAAY,UAAAF,EAAKG,KAAKC,oBAAV,eAAwBC,QAAxB,QAElB,OACE,kBAAC,IAAD,CAAQJ,SAAUA,EAAUI,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,SAEX,iCAEE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKO,GAAI,GACP,kBAAC,OAAD,CAAMC,GAAG,SAAT,QACA,0GAEF,kBAAC,IAAD,CAAKD,GAAI,GACP,kBAAC,OAAD,CAAMC,GAAG,WAAT,UACA,kIAEF,kBAAC,IAAD,CAAKD,GAAI,GACP,kBAAC,OAAD,CAAMC,GAAG,UAAT,YACA,4DACA,kBAAC,IAAD,QAGJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKD,GAAI,GACP,kBAAC,OAAD,CAAMC,GAAG,+BAAT,QACA,oFAWL,IAAMQ,EAAS","file":"component---src-pages-index-js-819c829b1465d93e3f92.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport {\n  PhotosListCategoryLabel, PhotosListSpacer10px,\n  PhotosListStyledLink,\n  PhotosListTile, TitleHeader\n} from \"../components/custom-styled-components\"\nimport { Col, Row } from \"react-bootstrap\"\nimport Layout from \"../components/layout\"\nimport Image from \"gatsby-image\"\nimport SEO from \"../components/seo\"\n\n\nconst PhotosList = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const photosManifest = data.allMdx.nodes\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"Photos\" />\n      {/*<div style={{ maxWidth: `960px`, margin: `1.45rem` }}>*/}\n        <TitleHeader>Photos</TitleHeader>\n        <Row>\n          {photosManifest.map((photoCollection, key) => {\n            return (\n              <Col xs={4} key={key}>\n                <PhotosListTile>\n                  <PhotosListStyledLink to={`/photos${photoCollection.fields.slug}`}>\n\n                    <Image fluid={photoCollection.frontmatter.thumbnail.childImageSharp.fluid} />\n                    <PhotosListSpacer10px />\n                    {photoCollection.frontmatter.title}\n                    <PhotosListCategoryLabel>{photoCollection.frontmatter.category}</PhotosListCategoryLabel>\n\n                  </PhotosListStyledLink>\n                </PhotosListTile>\n              </Col>\n            )\n          })}\n        </Row>\n\n\n      {/*</div>*/}\n    </Layout>\n  )\n}\n\nexport default PhotosList\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMdx(filter: {fileAbsolutePath: {regex: \"/content/photos/\"}}, sort: {fields: [frontmatter___id, frontmatter___date], order: ASC}) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          id\n          category\n          thumbnail {\n            childImageSharp {\n              fluid {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport photos from \"./photos\"\nimport { Col, Row } from \"react-bootstrap\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"Home\" />\n\n      <section>\n\n        <Row>\n          <Col xs={4}>\n            <Link to=\"/blog\">Blog</Link>\n            <p>I write about various things. More recently about technology and business.</p>\n          </Col>\n          <Col xs={4}>\n            <Link to=\"/photos\">Photos</Link>\n            <p>I first learned to code because I couldn't find photo hosting with gallery templates to my liking.</p>\n          </Col>\n          <Col xs={4}>\n            <Link to=\"/about\">About me</Link>\n            <p>My past and present projects.</p>\n            <Bio />\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={4}>\n            <Link to=\"https://github.com/itsrobli\">Code</Link>\n            <p>I've recently started to open source some stuff.</p>\n          </Col>\n        </Row>\n      </section>\n\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"sourceRoot":""}