{"version":3,"file":"component---src-templates-blog-post-js-content-file-path-home-runner-work-robli-co-gatsby-src-robli-co-gatsby-src-content-blog-2013-10-30-mobile-computing-mdx-d1954162ab041911b991.js","mappings":"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","sources":["webpack://robli-co-gatsby-src/./content/blog/2013-10-30-Mobile-computing.mdx","webpack://robli-co-gatsby-src/./src/templates/blog-post.js","webpack://robli-co-gatsby-src/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Mobile computing is starting to become crazy fast.\"), \"\\n\", React.createElement(_components.p, null, \"![20131030-232130.jpg][image-1]\"), \"\\n\", React.createElement(_components.p, null, \"Source: [DF][1]\"), \"\\n\", React.createElement(_components.p, null, \"To provide some more items for comparison (Source: [Geekbench 3][2]):\"), \"\\n\", React.createElement(\"table\", {\n    class: \"table\"\n  }, React.createElement(\"tbody\", null, React.createElement(\"tr\", null, React.createElement(\"th\"), React.createElement(\"th\", null, React.createElement(\"strong\", null, \"Single core\")), React.createElement(\"th\", null, React.createElement(\"strong\", null, \"Multi core\"))), React.createElement(\"tr\", null, React.createElement(\"th\", null, React.createElement(\"p\", null, \"Mac Pro (Mid 2010)\"), \"\\n\", React.createElement(\"p\", null, \"Intel Xeon X5670 2930 MHz (12 cores)\")), React.createElement(\"td\", null, React.createElement(\"p\", {\n    align: \"right\"\n  }, \"2,518\")), React.createElement(\"td\", null, React.createElement(\"p\", {\n    align: \"right\"\n  }, \"27,195\"))), React.createElement(\"tr\", null, React.createElement(\"th\", null, React.createElement(\"p\", null, \"Samsung Galaxy Note 3\"), \"\\n\", React.createElement(\"p\", null, \"Exynos 5 Octa 5420 1900 MHz (4 cores)\")), React.createElement(\"td\", null, React.createElement(\"p\", {\n    align: \"right\"\n  }, \"960\")), React.createElement(\"td\", null, React.createElement(\"p\", {\n    align: \"right\"\n  }, \"2,819\"))), React.createElement(\"tr\", null, React.createElement(\"th\", null, React.createElement(\"p\", null, \"Asus Nexus 7 (2013)\"), \"\\n\", React.createElement(\"p\", null, \"Qualcomm Snapdragon S4 Pro APQ8064 1500 MHz (4 cores)\")), React.createElement(\"td\", null, React.createElement(\"p\", {\n    align: \"right\"\n  }, \"595\")), React.createElement(\"td\", null, React.createElement(\"p\", {\n    align: \"right\"\n  }, \"1,832\"))), React.createElement(\"tr\", null, React.createElement(\"th\", null, React.createElement(\"p\", null, \"Samsung Galaxy S II\"), \"\\n\", React.createElement(\"p\", null, \"Samsung Exynos 4210 1200 MHz (2 cores)\")), React.createElement(\"td\", null, React.createElement(\"p\", {\n    align: \"right\"\n  }, \"346\")), React.createElement(\"td\", null, React.createElement(\"p\", {\n    align: \"right\"\n  }, \"618\"))))), \"\\n\", React.createElement(_components.p, null, \"[1]  http://daringfireball.net/2013/10/the_ipad_air\\n[2]  http://browser.primatelabs.com\"), \"\\n\", React.createElement(_components.p, null, \"[image-1]  /images/2013/10/20131030-232130.jpg\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/robli-co-gatsby-src/robli-co-gatsby-src/content/blog/2013-10-30-Mobile-computing.mdx\";\nimport React from \"react\";\nimport {Link, graphql} from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport {BlogPostMetadata} from \"../components/custom-styled-components\";\nconst BlogPostTemplate = ({data, location, children}) => {\n  const post = data.mdx;\n  const siteTitle = data.site.siteMetadata?.title || `Title`;\n  const {previous, next} = data;\n  return React.createElement(Layout, {\n    location: location,\n    title: siteTitle\n  }, React.createElement(Seo, {\n    title: post.frontmatter.title,\n    description: post.frontmatter.description || post.excerpt\n  }), React.createElement(\"article\", {\n    className: \"blog-post\",\n    itemScope: true,\n    itemType: \"http://schema.org/Article\"\n  }, React.createElement(\"header\", null, React.createElement(\"h1\", {\n    itemProp: \"headline\"\n  }, post.frontmatter.title), React.createElement(BlogPostMetadata, null, post.frontmatter.date, \" by \", React.createElement(Link, {\n    to: \"/about\"\n  }, \"Rob Li\"))), React.createElement(\"section\", null, children), React.createElement(\"hr\"), React.createElement(\"footer\")), React.createElement(\"nav\", {\n    className: \"blog-post-nav\"\n  }, React.createElement(\"ul\", {\n    style: {\n      display: `flex`,\n      flexWrap: `wrap`,\n      justifyContent: `space-between`,\n      listStyle: `none`,\n      padding: 0\n    }\n  }, React.createElement(\"li\", null, previous && React.createElement(Link, {\n    to: `/blog${previous.fields.slug}`,\n    rel: \"prev\"\n  }, \" ← \", previous.frontmatter.title)), React.createElement(\"li\", null, next && React.createElement(Link, {\n    to: `/blog${next.fields.slug}`,\n    rel: \"next\"\n  }, next.frontmatter.title, \" →\")))));\n};\nBlogPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const pageQuery = graphql`\n  query BlogPostTemplate(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    mdx(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n#      body\n      frontmatter {\n        title\n        date(formatString: \"dddd, DD MMMM YYYY\")\n        description\n#        author\n        tags\n      }\n    }\n    previous: mdx(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: mdx(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode} [children]\n *   Children.\n *\n * @callback MergeComponents\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components|MergeComponents} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  let allComponents = useMDXComponents(components)\n\n  if (disableParentContext) {\n    allComponents = components || emptyObject\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","_provideComponents","components","React","class","align","wrapper","MDXLayout","BlogPostTemplate","_ref","data","location","children","post","mdx","siteTitle","site","siteMetadata","_data$site$siteMetada","title","previous","next","Layout","Seo","frontmatter","description","excerpt","className","itemScope","itemType","itemProp","BlogPostMetadata","date","Link","to","style","display","flexWrap","justifyContent","listStyle","padding","fields","slug","rel","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}