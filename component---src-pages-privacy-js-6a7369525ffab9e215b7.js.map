{"version":3,"file":"component---src-pages-privacy-js-6a7369525ffab9e215b7.js","mappings":"mOAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,GAAI,KACJC,EAAG,IACHC,GAAI,OACHC,EAAAA,EAAAA,MAAsBR,EAAMS,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,kIAAmI,KAAMM,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,4DAA6D,KAAMM,EAAAA,cAAoBT,EAAYI,GAAI,KAAM,oDAAqD,KAAMK,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,sOAAuOM,EAAAA,cAAoBT,EAAYK,EAAG,CACruBK,KAAM,oDACL,QAAS,KAAM,KAAMD,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,yDAA0D,KAAMM,EAAAA,cAAoBT,EAAYM,GAAI,KAAM,qDAAsD,KAAMG,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,uEAAwE,KAAMM,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,uCAAwCM,EAAAA,cAAoBT,EAAYK,EAAG,CAChdK,KAAM,6CACL,WAAY,6QAA8Q,KAAMD,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,uaAAwa,KAAMM,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,iEAAkEM,EAAAA,cAAoBT,EAAYK,EAAG,CACt4BK,KAAM,8EACL,QAAS,+DAAgED,EAAAA,cAAoBT,EAAYK,EAAG,CAC7GK,KAAM,8GACL,QAAS,KAAM,KAAMD,EAAAA,cAAoBT,EAAYM,GAAI,KAAM,kBAAmB,KAAMG,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,0IAA2IM,EAAAA,cAAoBT,EAAYK,EAAG,CAChTK,KAAM,4CACL,UAAW,8EAChB,CAKA,MAJA,SAAoBX,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOY,QAASC,GAAaX,OAAOC,OAAO,CAAC,GAAGK,EAAAA,EAAAA,MAAsBR,EAAMS,YAC3E,OAAOI,EAAYH,EAAAA,cAAoBG,EAAWb,EAAOU,EAAAA,cAAoBX,EAAmBC,IAAUD,EAAkBC,EAC9H,ECNA,MAXsBc,IAAyB,IAADC,EAAA,IAAvB,KAAEC,EAAI,SAAEC,GAAUH,EACvC,MAAMI,GAAkC,QAAtBH,EAAAC,EAAKG,KAAKC,oBAAY,IAAAL,OAAA,EAAtBA,EAAwBM,QAAK,QAC/C,OACEX,EAAAA,cAACY,EAAAA,EAAM,CAACL,SAAUA,EAAUI,MAAOH,GACjCR,EAAAA,cAACa,EAAAA,EAAG,CAACF,MAAM,mBACXX,EAAAA,cAACc,EAAAA,GAAW,KAAC,kBACbd,EAAAA,cAACe,EAAqB,MACf,C,sECkBN,MAAMC,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBlB,GAC/B,MAAMmB,EAAoB,aAAiBF,GAG3C,OAAO,WAAc,IAEO,mBAAfjB,EACFA,EAAWmB,GAGb,IAAIA,KAAsBnB,IAChC,CAACmB,EAAmBnB,GACzB,C","sources":["webpack://robli-co-gatsby-src/./content/assets/privacy.md","webpack://robli-co-gatsby-src/./src/pages/privacy.js","webpack://robli-co-gatsby-src/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    a: \"a\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"I believe privacy is important. Understanding how your private information is accessed and used is important to protecting it.\"), \"\\n\", React.createElement(_components.p, null, \"This website does not collect any information about you.\"), \"\\n\", React.createElement(_components.h2, null, \"I no longer use Google Analytics on this website\"), \"\\n\", React.createElement(_components.p, null, \"It is now normal that private information about your usage patterns of websites is collected and analysed by large advertising businesses. A good explanation on how and why they do this from a business perspective can be found \", React.createElement(_components.a, {\n    href: \"https://stratechery.com/2015/why-web-pages-suck/\"\n  }, \"here\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"On balance, I prefer not to use this service anymore.\"), \"\\n\", React.createElement(_components.h3, null, \"How Google Analytics works if you’re keen to know\"), \"\\n\", React.createElement(_components.p, null, \"Google Analytics collects anonymised data about visits to websites.\"), \"\\n\", React.createElement(_components.p, null, \"Google Analytics works by accessing \", React.createElement(_components.a, {\n    href: \"https://en.wikipedia.org/wiki/HTTP_cookie\"\n  }, \"Cookies\"), \" and other data that is transmitted by your web browser while you travel around the web. Google Analytics records from your visits various things including: what website you came from, how long you stay for, what kind of computer you’re using, your IP address, etc.\"), \"\\n\", React.createElement(_components.p, null, \"Google collects and stores this data on their servers located in various locations around the world. Google will analyse this data and prepare reports. Google will also share this data with third parties if required to do so by law or if Google employs those third parties to process Google Analytics data for them. Google says they will never combine your IP address with other data that could identify you personally.\"), \"\\n\", React.createElement(_components.p, null, \"You can find out more about Google Analytics privacy policies \", React.createElement(_components.a, {\n    href: \"https://support.google.com/analytics/topic/2919631?hl=en&ref_topic=1008008\"\n  }, \"here\"), \". You can find a more technical explanation of how it works \", React.createElement(_components.a, {\n    href: \"https://developers.google.com/analytics/resources/concepts/gaConceptsTrackingOverview#howAnalyticsGetsData\"\n  }, \"here\"), \".\"), \"\\n\", React.createElement(_components.h3, null, \"How to Opt Out\"), \"\\n\", React.createElement(_components.p, null, \"You can stop the installation of the Cookie on your computer by setting a preference in your web browser. Google also offers a browser \", React.createElement(_components.a, {\n    href: \"https://tools.google.com/dlpage/gaoptout\"\n  }, \"plugin\"), \" that you can install to permanently opt out of Google Analytics tracking.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport { TitleHeader } from \"../components/custom-styled-components\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport PrivacyPolicyMarkdown from \"../../content/assets/privacy.md\"\n\nconst PrivacyPolicy = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"Privacy policy\" />\n      <TitleHeader>Privacy policy</TitleHeader>\n      <PrivacyPolicyMarkdown />\n    </Layout>\n  )\n}\n\nexport default PrivacyPolicy\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","h2","a","h3","_provideComponents","components","React","href","wrapper","MDXLayout","_ref","_data$site$siteMetada","data","location","siteTitle","site","siteMetadata","title","Layout","Seo","TitleHeader","PrivacyPolicyMarkdown","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}