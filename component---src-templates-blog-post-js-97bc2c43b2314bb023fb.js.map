{"version":3,"file":"component---src-templates-blog-post-js-97bc2c43b2314bb023fb.js","mappings":"4LAkEA,UA3DyB,IAAmC,IAAD,MAAjC,KAAEA,EAAI,SAAEC,EAAQ,SAAEC,GAAU,EACpD,MAAMC,EAAOH,EAAKI,IACZC,GAAkC,QAAtB,EAAAL,EAAKM,KAAKC,oBAAY,aAAtB,EAAwBC,QAAK,SACzC,SAAEC,EAAQ,KAAEC,GAASV,EAE3B,OACE,gBAAC,IAAM,CAACC,SAAUA,EAAUO,MAAOH,GACjC,gBAAC,IAAG,CACFG,MAAOL,EAAKQ,YAAYH,MACxBI,YAAaT,EAAKQ,YAAYC,aAAeT,EAAKU,UAEpD,2BACEC,UAAU,YACVC,WAAS,EACTC,SAAS,6BAET,8BACE,sBAAIC,SAAS,YAAYd,EAAKQ,YAAYH,OAC1C,gBAAC,KAAgB,KACdL,EAAKQ,YAAYO,KAAI,OAAK,gBAAC,EAAAC,KAAI,CAACC,GAAG,UAAQ,YAGhD,+BACGlB,GAEH,2BACA,gCAGF,uBAAKY,UAAU,iBACb,sBACEO,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,0BACGjB,GACC,gBAAC,EAAAU,KAAI,CAACC,GAAE,QAAUX,EAASkB,OAAOC,KAAQC,IAAI,QAAM,KAC/CpB,EAASE,YAAYH,QAI9B,0BACGE,GACC,gBAAC,EAAAS,KAAI,CAACC,GAAE,QAAUV,EAAKiB,OAAOC,KAAQC,IAAI,QACvCnB,EAAKC,YAAYH,MAAK,SAM1B,C","sources":["webpack://robli-co-gatsby-src/./src/templates/blog-post.js"],"sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { BlogPostMetadata } from \"../components/custom-styled-components\"\n\nconst BlogPostTemplate = ({ data, location, children }) => {\n  const post = data.mdx\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { previous, next } = data\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <BlogPostMetadata>\n            {post.frontmatter.date} by <Link to=\"/about\">Rob Li</Link>\n          </BlogPostMetadata>\n        </header>\n        <section>\n          {children}\n        </section>\n        <hr />\n        <footer>\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={`/blog${previous.fields.slug}`} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={`/blog${next.fields.slug}`} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    mdx(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n#      body\n      frontmatter {\n        title\n        date(formatString: \"dddd, DD MMMM YYYY\")\n        description\n#        author\n        tags\n      }\n    }\n    previous: mdx(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: mdx(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["data","location","children","post","mdx","siteTitle","site","siteMetadata","title","previous","next","frontmatter","description","excerpt","className","itemScope","itemType","itemProp","date","Link","to","style","display","flexWrap","justifyContent","listStyle","padding","fields","slug","rel"],"sourceRoot":""}