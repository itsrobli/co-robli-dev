{"version":3,"sources":["webpack:///./src/templates/photo-collection.js"],"names":["PhotoCollectionTemplate","data","location","post","mdx","photosCollection","nodes","siteTitle","site","siteMetadata","title","previous","next","frontmatter","description","excerpt","className","itemScope","itemType","map","photo","key","fluid","childImageSharp","to","pageQuery"],"mappings":"4FAAA,0HAsDeA,UA3CiB,SAAC,GAAwB,IAAD,EAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACjCC,EAAOF,EAAKG,IACZC,EAAmBJ,EAAKI,iBAAiBC,MACzCC,GAAY,UAAAN,EAAKO,KAAKC,oBAAV,eAAwBC,QAAxB,QACST,EAAnBU,SAAmBV,EAATW,KAElB,OACE,kBAAC,IAAD,CAAQV,SAAUA,EAAUQ,MAAOH,GACjC,kBAAC,IAAD,CACEG,MAAOP,EAAKU,YAAYH,MACxBI,YAAaX,EAAKU,YAAYC,aAAeX,EAAKY,UAEpD,6BACEC,UAAU,YACVC,WAAS,EACTC,SAAS,6BAET,kBAAC,IAAD,KAAcf,EAAKU,YAAYH,OAE7BL,EAAiBc,KAAI,SAACC,EAAOC,GACzB,OACE,6BACE,kBAAC,IAAD,MACA,kBAAC,IAAD,CACEA,IAAKA,EACLC,MAAOF,EAAMG,gBAAgBD,QAG/B,kBAAC,IAAD,WAOZ,iDAGA,kBAAC,IAAD,CAAoBE,GAAG,WAAvB,oBAOC,IAAMC,EAAS","file":"component---src-templates-photo-collection-js-bb4ab3a26030746d0bbb.js","sourcesContent":["import React from \"react\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { graphql } from \"gatsby\"\nimport Image from \"gatsby-image\"\nimport {\n  BackToPhotosButton,\n  PhotoCollectionHeroImage,\n  PhotosListSpacer10px, TitleHeader\n} from \"../components/custom-styled-components\"\n\nconst PhotoCollectionTemplate = ({ data, location }) => {\n  const post = data.mdx\n  const photosCollection = data.photosCollection.nodes\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { previous, next } = data\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <TitleHeader>{post.frontmatter.title}</TitleHeader>\n        {\n          photosCollection.map((photo, key) => {\n              return (\n                <div>\n                  <PhotosListSpacer10px />\n                  <PhotoCollectionHeroImage\n                    key={key}\n                    fluid={photo.childImageSharp.fluid}\n                  />\n\n                  <PhotosListSpacer10px />\n                </div>\n              )\n            }\n          )\n        }\n      </article>\n      <div>\n        Hi from template\n      </div>\n      <BackToPhotosButton to=\"/photos\">Back to photos</BackToPhotosButton>\n    </Layout>\n  )\n}\n\nexport default PhotoCollectionTemplate\n\nexport const pageQuery = graphql`\n  query PhotoCollectionBySlug(\n    $id: String!\n    $previousPhotoId: String\n    $nextPhotoId: String\n    $photoCollectionLocationRegex: String  \n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    photosCollection: allFile(\n        filter: {\n            sourceInstanceName: {eq: \"photos\"}, \n            dir: {regex: $photoCollectionLocationRegex},\n            ext: {eq: \".jpg\"}\n        }, \n        sort: {fields: [childImageSharp___fluid___originalName], order: ASC}\n    ) {\n        nodes {\n            childImageSharp {\n                fluid (quality: 100) {\n                    ...GatsbyImageSharpFluid\n                }\n            }\n        }\n    }\n    mdx(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      body\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        filesystem_directory\n      }\n    }\n    previous: mdx(id: { eq: $previousPhotoId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: mdx(id: { eq: $nextPhotoId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"sourceRoot":""}