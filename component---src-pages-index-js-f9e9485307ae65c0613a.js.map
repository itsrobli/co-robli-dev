{"version":3,"sources":["webpack:///./node_modules/react-bootstrap/esm/Row.js","webpack:///./src/components/bio.js","webpack:///./src/pages/photos.js","webpack:///./node_modules/react-bootstrap/esm/Col.js","webpack:///./src/pages/index.js"],"names":["DEVICE_SIZES","Row","forwardRef","_ref","ref","bsPrefix","className","noGutters","_ref$as","as","Component","props","decoratedBsPrefix","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","createElement","apply","concat","displayName","defaultProps","Bio","data","useStaticQuery","author","site","siteMetadata","social","avatar","childImageSharp","fixed","alt","name","imgStyle","borderRadius","summary","href","twitter","PhotosList","location","siteTitle","title","photosManifest","allMdx","nodes","map","photoCollection","key","xs","to","fields","slug","fluid","frontmatter","thumbnail","category","pageQuery","Col","prefix","spans","span","offset","order","_propValue$span","length","BlogIndex"],"mappings":"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","file":"component---src-pages-index-js-f9e9485307ae65c0613a.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar defaultProps = {\n  noGutters: false\n};\nvar Row = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      noGutters = _ref.noGutters,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"noGutters\", \"as\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  var sizePrefix = decoratedBsPrefix + \"-cols\";\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      cols = propValue.cols;\n    } else {\n      cols = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (cols != null) classes.push(\"\" + sizePrefix + infix + \"-\" + cols);\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames.apply(void 0, [className, decoratedBsPrefix, noGutters && 'no-gutters'].concat(classes))\n  }));\n});\nRow.displayName = 'Row';\nRow.defaultProps = defaultProps;\nexport default Row;","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Image from \"gatsby-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n        childImageSharp {\n          fixed(width: 50, height: 50, quality: 95) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  const avatar = data?.avatar?.childImageSharp?.fixed\n\n  return (\n    <div className=\"bio\">\n      {avatar && (\n        <Image\n          fixed={avatar}\n          alt={author?.name || ``}\n          className=\"bio-avatar\"\n          imgStyle={{\n            borderRadius: `50%`,\n          }}\n        />\n      )}\n      {author?.name && (\n        <p>\n          Written by <strong>{author.name}</strong> {author?.summary || null}\n          {` `}\n          <a href={`https://twitter.com/${social?.twitter || ``}`}>\n            Follow on Twitter\n          </a>\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport {\n  PhotosListCategoryLabel, PhotosListSpacer10px,\n  PhotosListStyledLink,\n  PhotosListTile, TitleHeader\n} from \"../components/custom-styled-components\"\nimport { Col, Row } from \"react-bootstrap\"\nimport Layout from \"../components/layout\"\nimport Image from \"gatsby-image\"\nimport SEO from \"../components/seo\"\n\n\nconst PhotosList = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const photosManifest = data.allMdx.nodes\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"Photos\" />\n      {/*<div style={{ maxWidth: `960px`, margin: `1.45rem` }}>*/}\n        <TitleHeader>Photos</TitleHeader>\n        <Row>\n          {photosManifest.map((photoCollection, key) => {\n            return (\n              <Col xs={4} key={key}>\n                <PhotosListTile>\n                  <PhotosListStyledLink to={`/photos${photoCollection.fields.slug}`}>\n\n                    <Image fluid={photoCollection.frontmatter.thumbnail.childImageSharp.fluid} />\n                    <PhotosListSpacer10px />\n                    {photoCollection.frontmatter.title}\n                    <PhotosListCategoryLabel>{photoCollection.frontmatter.category}</PhotosListCategoryLabel>\n\n                  </PhotosListStyledLink>\n                </PhotosListTile>\n              </Col>\n            )\n          })}\n        </Row>\n\n\n      {/*</div>*/}\n    </Layout>\n  )\n}\n\nexport default PhotosList\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMdx(filter: {fileAbsolutePath: {regex: \"/content/photos/\"}}, sort: {fields: [frontmatter___id, frontmatter___date], order: ASC}) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          id\n          category\n          thumbnail {\n            childImageSharp {\n              fluid {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar Col = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'col');\n  var spans = [];\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var span;\n    var offset;\n    var order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      var _propValue$span = propValue.span;\n      span = _propValue$span === void 0 ? true : _propValue$span;\n      offset = propValue.offset;\n      order = propValue.order;\n    } else {\n      span = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (span) spans.push(span === true ? \"\" + prefix + infix : \"\" + prefix + infix + \"-\" + span);\n    if (order != null) classes.push(\"order\" + infix + \"-\" + order);\n    if (offset != null) classes.push(\"offset\" + infix + \"-\" + offset);\n  });\n\n  if (!spans.length) {\n    spans.push(prefix); // plain 'col'\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames.apply(void 0, [className].concat(spans, classes))\n  }));\n});\nCol.displayName = 'Col';\nexport default Col;","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport photos from \"./photos\"\nimport { Col, Row } from \"react-bootstrap\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"Home\" />\n\n      <section>\n\n        <Row>\n          <Col xs={4}>\n            <Link to=\"/blog\">Blog</Link>\n            <p>I write about various things. More recently about technology and business.</p>\n          </Col>\n          <Col xs={4}>\n            <Link to=\"/photos\">Photos</Link>\n            <p>I first learned to code because I couldn't find photo hosting with gallery templates to my liking.</p>\n          </Col>\n          <Col xs={4}>\n            <Link to=\"/about\">About me</Link>\n            <p>My past and present projects.</p>\n            <Bio />\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={4}>\n            <Link to=\"https://github.com/itsrobli\">Code</Link>\n            <p>I've recently started to open source some stuff.</p>\n          </Col>\n        </Row>\n      </section>\n\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"sourceRoot":""}